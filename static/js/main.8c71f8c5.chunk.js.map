{"version":3,"sources":["assets/logo/vectorized.svg","components/personal/LogoType.tsx","components/personal/Motto.tsx","pages/index.tsx","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","react_default","a","createElement","id","x1","x2","y1","y2","gradientUnits","offset","stopColor","_ref3","fill","d","_ref4","_ref5","vectorized_SvgVectorized","_ref","svgRef","props","viewBox","ref","ForwardRef","forwardRef","personal_LogoType","__webpack_require__","p","className","personal_Motto","Description","linaria_react","name","class","pages","Fragment","Boolean","window","ReactDOM","document","navigator","registration"],"mappings":"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","file":"static/js/main.8c71f8c5.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"defs\", null, React.createElement(\"linearGradient\", {\n  id: \"a\",\n  x1: 99.29,\n  x2: 455.11,\n  y1: 191.95,\n  y2: 191.95,\n  gradientUnits: \"userSpaceOnUse\"\n}, React.createElement(\"stop\", {\n  offset: 0.32,\n  stopColor: \"#5b67a6\"\n}), React.createElement(\"stop\", {\n  offset: 0.66,\n  stopColor: \"#816199\"\n}), React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#a65b8d\"\n})), React.createElement(\"linearGradient\", {\n  id: \"b\",\n  x1: 110.35,\n  x2: 461.25,\n  y1: 368.96,\n  y2: 368.96,\n  gradientUnits: \"userSpaceOnUse\"\n}, React.createElement(\"stop\", {\n  offset: 0.32,\n  stopColor: \"#5b67a6\"\n}), React.createElement(\"stop\", {\n  offset: 1,\n  stopColor: \"#a65b8d\"\n})), React.createElement(\"linearGradient\", {\n  id: \"c\",\n  x1: 56.89,\n  x2: 203.89,\n  y1: 207.32,\n  y2: 207.32,\n  gradientUnits: \"userSpaceOnUse\"\n}, React.createElement(\"stop\", {\n  offset: 0,\n  stopColor: \"#a65b8d\"\n}), React.createElement(\"stop\", {\n  offset: 0.31,\n  stopColor: \"#ff8c66\"\n}), React.createElement(\"stop\", {\n  offset: 0.72,\n  stopColor: \"#ffa98c\"\n})));\n\nvar _ref3 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"url(#a)\",\n  d: \"M455.11 204.62a156.11 156.11 0 0 1-69.88 130.3h-.06l-66.07-66.07-2.46-2.47v-.08a64.25 64.25 0 0 0 46.26-61.1c.32-35.65-29.62-64.81-65.26-64.81h-107L99.31 49.05v-.08h214.87a156.27 156.27 0 0 1 140.93 155.65z\"\n});\n\nvar _ref4 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"url(#b)\",\n  d: \"M428.87 463.03L240.72 274.89h-49.16l-40.6 40.6L298.5 463.03h130.37z\"\n});\n\nvar _ref5 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fill: \"url(#c)\",\n  d: \"M104.19 107.62h-47.3l99.7 99.7-99.7 99.7h47.3l99.7-99.7-99.7-99.7z\"\n});\n\nvar SvgVectorized = function SvgVectorized(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgVectorized, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/vectorized.2ee12ca2.svg\";\nexport { ForwardRef as ReactComponent };","import { css } from 'linaria';\nimport React, { FC } from 'react';\nimport { ReactComponent as SvgLogo } from '../../assets/logo/vectorized.svg';\nimport { obsiBluePurple, white } from '../../styles/colors';\n\nconst Logo = css`\n  width: 20vmin;\n  height: auto;\n  padding-right: 2vmin;\n`;\n\nconst Wrap = css`\n  width: calc(100vw - 1vmin * 2);\n  margin-top: 5vmin;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  background: ${white()};\n`;\n\nconst Text = css`\n  font-size: 14vmin;\n  letter-spacing: 1.5vmin;\n  color: transparent;\n  background-image: linear-gradient(\n    166deg,\n    ${obsiBluePurple({ gradientLevel: 10 })} 36%,\n    ${obsiBluePurple({ gradientLevel: 0 })} 64%\n  );\n  background-clip: text;\n  -webkit-background-clip: text;\n`;\n\nconst Highlight = css`\n  font-weight: bold;\n`;\n\nconst LogoType: FC = () => {\n  return (\n    <div className={Wrap}>\n      <SvgLogo className={Logo} />\n      <div className={Text}>\n        <span className={Highlight}>R</span>anol\n        <span className={Highlight}>P</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LogoType;\n","import { css } from 'linaria';\nimport React, { FC } from 'react';\n\nconst Wrap = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 8vmin;\n`;\n\nconst Text = css`\n  font-size: 6vmin;\n  font-weight: lighter;\n  font-style: italic;\n`;\n\nconst Highlight = css`\n  font-weight: normal;\n  text-decoration: underline;\n  text-decoration-color: hsl(15, 100%, 77.5%);\n`;\n\nconst Motto: FC = () => (\n  <div className={Wrap}>\n    <span className={Text}>\n      <span className={Highlight}>Lazy</span>, but get{' '}\n      <span className={Highlight}>Better</span>\n    </span>\n  </div>\n);\n\nexport default Motto;\n","import { styled } from 'linaria/react';\nimport React, { FC } from 'react';\nimport LogoType from '../components/personal/LogoType';\nimport Motto from '../components/personal/Motto';\n\nconst Description = styled.div`\n  width: 100%;\n  text-align: center;\n  font-size: 4vmin;\n`;\n\nconst App: FC = () => {\n  return (\n    <>\n      <LogoType />\n      <Motto />\n      <Description>\n        게으르지만 매일 나아가고자 하는 Ranol☆P입니다.\n        <br />\n        공식 발음은 <code>/ra-nol-pee/</code>이며, 닉네임 마지막에 붙은 P는\n        <br />\n        Publisher, Producer, Programmer, Presenter 등을 나타냅니다.\n      </Description>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  type Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n  };\n  \n  export function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(\n        (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n        window.location.href\n      );\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Index from './pages/index';\n\nimport './styles/default';\nimport './styles/font';\nimport './styles/reset';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <Index />\n  </>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}